/* Modern reset: https://piccalil.li/blog/a-more-modern-css-reset/ */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* Prevent font size inflation */
html {
  text-size-adjust: none;
}
/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}
/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}
/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}
/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}
/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentcolor;
}
/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}
/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}
/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}
/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}
/* @font-face here */
@font-face {
  font-display: fallback;
  font-family: 'Barlow Semi Condensed';
  font-style: normal;
  font-weight: 500;
  src: url('../fonts/barlow-semi-condensed-v15-latin-500.woff2?v=1.0.0') format('woff2'); /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}
/* barlow-semi-condensed-600 - latin */
@font-face {
  font-display: fallback;
  font-family: 'Barlow Semi Condensed';
  font-style: normal;
  font-weight: 600;
  src: url('../fonts/barlow-semi-condensed-v15-latin-600.woff2?v=1.0.0') format('woff2'); /* Chrome 36+, Opera 23+, Firefox 39+, Safari 12+, iOS 10+ */
}
:root{
  --color-moderate-violet: hsl(263, 55%, 52%);
  --color-light-violet: hsl(264, 82%, 70%);
  --color-dark-grayish-blue: hsl(217, 19%, 35%);
  --color-dark-blackish-blue: hsl(219, 29%, 14%);
  --color-white: hsl(0, 0%, 100%);
  --color-light-gray: hsl(0, 0%, 81%);
  --color-light-grayish-blue: hsl(210, 46%, 95%);
  --space-3xs: clamp(0.3125rem, 0.29rem + 0.11vw, 0.375rem);
  --space-2xs: clamp(0.5625rem, 0.52rem + 0.23vw, 0.6875rem);
  --space-xs: clamp(0.875rem, 0.80rem + 0.34vw, 1.0625rem);
  --space-s: clamp(1.125rem, 1.03rem + 0.46vw, 1.375rem);
  --space-m: clamp(1.125rem, 1.03rem + 0.46vw, 1.375rem);
  --space-l: clamp(2.25rem, 2.06rem + 0.92vw, 2.75rem);
  --space-xl: clamp(3.375rem, 3.09rem + 1.38vw, 4.125rem);
  --space-2xl: clamp(4.5rem, 4.12rem + 1.84vw, 5.5rem);
  --space-3xl: clamp(6.75rem, 6.18rem + 2.76vw, 8.25rem);
  --space-4xl: clamp(7.875rem, 7.21rem + 3.22vw, 9.625rem);
  --space-3xs-2xs: clamp(0.3125rem, 0.17rem + 0.69vw, 0.6875rem);
  --space-2xs-xs: clamp(0.5625rem, 0.37rem + 0.92vw, 1.0625rem);
  --space-xs-s: clamp(0.875rem, 0.69rem + 0.92vw, 1.375rem);
  --space-s-m: clamp(1.125rem, 1.03rem + 0.46vw, 1.375rem);
  --space-m-l: clamp(1.125rem, 0.51rem + 2.99vw, 2.75rem);
  --space-l-xl: clamp(2.25rem, 1.54rem + 3.45vw, 4.125rem);
  --space-xl-2xl: clamp(3.375rem, 2.57rem + 3.91vw, 5.5rem);
  --space-2xl-3xl: clamp(4.5rem, 3.08rem + 6.90vw, 8.25rem);
  --space-3xl-4xl: clamp(6.75rem, 5.66rem + 5.29vw, 9.625rem);
  --space-xs-m: clamp(0.875rem, 0.69rem + 0.92vw, 1.375rem);
  --size-step-3: clamp(1.3125rem, 1.03rem + 1.38vw, 2.0625rem);
  --size-step-2: clamp(1.1875rem, 1.00rem + 0.92vw, 1.6875rem);
  --size-step-1: clamp(1.0625rem, 0.97rem + 0.46vw, 1.3125rem);
  --size-step-0: clamp(0.9375rem, 0.89rem + 0.23vw, 1.0625rem);
  --leading-flat: 1;
  --leading-fine: 1.15;
  --leading-standard: 1.5;
  --leading-loose: 1.7;
  --font-base: Barlow Semi Condensed,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;
  --font-medium: 500;
  --font-bold: 600;
  --breakpoint-sm: 20.625rem;
  --breakpoint-md: 47.5rem;
  --breakpoint-lg: 75rem;
}
.attribution {
  text-align: center;
  text-wrap: balance;
}
.attribution__link {
  color: var(--color-base);

  &:hover {
    color: var(--color-moderate-violet);
  }

  &:focus-visible {
    outline: 2px solid;
    padding: 2px;
    color: var(--color-moderate-violet);
    text-decoration: none;
  }
}
.testimonial {
  background-color: var(--color-white);
  border-radius: 10px;
  padding: var(--space-xs-s);
  place-content: center;
}
.testimonial img {
  border-radius: 50%;
  aspect-ratio: 1;
}
.testimonial__header h2 {
  margin: 0;
  font-size: var(--size-step-1);
}
.testimonial__header p {
  font-size: var(--size-step-1);
  margin: 0;
}
.testimonial__header {
  display: flex;
  flex-direction: row;
  gap: var(--space-s);
}
.testimonial__summary {
  font-size: var(--size-step-2);
  line-height: var(--leading-fine);
}
.testimonial blockquote {
  margin-inline: 0;
  font-weight: var(--font-bold);

  &::before {
    content: '\201C\00A0'; /* Unicode for left double quote */
  }

  &::after {
    content: '\00A0\201D'; /* Unicode for right double quote */
  }
}
.testimonial[data-layout-author='daniel-clifford'] img,
.testimonial[data-layout-author='patrick-abrams'] img {
  padding: 3px;
  background-color: var(--color-light-violet);
}
.testimonial[data-layout-author='daniel-clifford'] {
  background: var(--color-moderate-violet)
    url('../images/bg-pattern-quotation.svg?v=1.0.0') no-repeat;

  /*   background-origin: content-box; */
  background-position-x: calc(100% - var(--space-l-xl));
  color: var(--color-base-dark);
}
.testimonial[data-layout-author='jonathan-walters'] {
  background-color: var(--color-dark-grayish-blue);
  color: var(--color-base-dark);
}
.testimonial[data-layout-author='patrick-abrams'] {
  background-color: var(--color-dark-blackish-blue);
  color: var(--color-base-dark);
}
.testimonial[data-layout-author='daniel-clifford'] {
  grid-area: daniel-clifford;
}
.testimonial[data-layout-author='jonathan-walters'] {
  grid-area: jonathan-walters;
}
.testimonial[data-layout-author='kira-whittle'] {
  grid-area: kira-whittle;
}
.testimonial[data-layout-author='jeanette-harmon'] {
  grid-area: jeanette-harmon;
}
.testimonial[data-layout-author='patrick-abrams'] {
  grid-area: patrick-abrams;
}
/* stylelint-disable */
@media (min-width: 47.5rem) {
}
/* stylelint-enable */
.testimonial__status,
.testimonial__quote {
  opacity: 0.9;
}
/*
CLUSTER
More info: https://every-layout.dev/layouts/cluster/
A layout that lets you distribute items with consitent
spacing, regardless of their size

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--cluster-horizontal-alignment (flex-start) How items should align
horizontally. Can be any acceptable flexbox aligmnent value.

--cluster-vertical-alignment How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
/* 
FLOW COMPOSITION 
Like the Every Layout stack: https://every-layout.dev/layouts/stack/
Info about this implementation: https://piccalil.li/quick-tip/flow-utility/ 
*/
/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
.grid {
  display: grid;
  gap: var(--gutter, var(--space-s-m));
  grid-template-columns: 1fr;
  grid-template-areas: 'daniel-clifford' 'jonathan-walters' 'jeanette-harmon' 'patrick-abrams' 'kira-whittle';

  /* stylelint-disable */
  @media (min-width: 47.5rem) {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-areas:
      'daniel-clifford  daniel-clifford jonathan-walters'
      'kira-whittle kira-whittle kira-whittle'
      'jeanette-harmon patrick-abrams  patrick-abrams';
  }
  /* stylelint-enable */

  /* stylelint-disable */
  @media (min-width: 75rem) {
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas:
      'daniel-clifford  daniel-clifford jonathan-walters kira-whittle'
      'jeanette-harmon patrick-abrams  patrick-abrams kira-whittle';
  }
  /* stylelint-enable */
}
/*
REPEL
A little layout that pushes items away from each other where
there is space in the viewport and stacks on small viewports

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--repel-vertical-alignment How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
/* 
SIDEBAR
More info: https://every-layout.dev/layouts/sidebar/
A layout that allows you to have a flexible main content area
and a "fixed" width sidebar that sits on the left or right.
If there is not enough viewport space to fit both the sidebar
width *and* the main content minimum width, they will stack
on top of each other

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-size-1)): This defines the space
between the sidebar and main content.

--sidebar-target-width (20rem): How large the sidebar should be

--sidebar-content-min-width(50%): The minimum size of the main content area

EXCEPTIONS
.sidebar[data-direction='rtl']: flips the sidebar to be on the right 
*/
/*
SWITCHER
More info: https://every-layout.dev/layouts/switcher/
A layout that allows you to lay **2** items next to each other
until there is not enough horizontal space to allow that.

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-size-1)): This defines the space
between each item

--switcher-target-container-width (40rem): How large the container
needs to be to allow items to sit inline with each other

--switcher-vertical-alignment How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
/* Max 2 items,
so anything greater than 2 is full width */
/*
WRAPPER COMPOSITION 
A common wrapper/container
*/
.wrapper {
  margin-inline: auto;
  max-width: clamp(16rem, var(--wrapper-max-width, 100vw), 80rem);
  padding-left: var(--gutter);
  padding-right: var(--gutter);
  position: relative;
}
/* 
REGION UTILITY
Consistent block padding for page sections
*/
/* 
VISUALLY HIDDEN UTILITY
Info: https://piccalil.li/quick-tip/visually-hidden/ 
*/
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 0;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}
:root {
  --gutter: var(--space-s-l);
  --transition-base: 250ms ease;
  --transition-movement: 200ms linear;
  --transition-fade: 300ms ease;
  --transition-bounce: 500ms cubic-bezier(0.5, 0.05, 0.2, 1.5);
  --leading-standard: 1.5;
  --grid-min-item-size: 18rem;
  --grid-placement: auto-fit;
  --wrapper-max-width: 80rem;
  --color-base-dark: var(--color-light-grayish-blue);
  --color-base: var(--color-dark-blackish-blue);
}
/* 
  Global styles 

  Low-specificity, global styles that apply to the whole 
  project: https://cube.fyi/css.html
*/
body {
  background: var(--color-light-grayish-blue);
  color: var(--color-dark);
  font-size: var(--size-step-0);
  font-family: var(--font-base);
  line-height: var(--leading-standard);
  font-weight: var(--font-medium);
}
.block{
  display: block;
}
.grid{
  display: grid;
}
